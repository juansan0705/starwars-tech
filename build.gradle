plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'com.bmuschko.docker-remote-api' version '9.3.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = '21'
targetCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework:spring-core:6.1.11'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.kafka:spring-kafka:3.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    runtimeOnly 'com.h2database:h2:2.3.230'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = 'app.jar'
}

//you need to set the environment variables DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_EMAIL in your system
docker {
    url = 'unix:///var/run/docker.sock'
    registryCredentials {
        username = System.getenv('DOCKER_USERNAME')
        password = System.getenv('DOCKER_PASSWORD')
        email = System.getenv('DOCKER_EMAIL')
    }
}

task buildDockerImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
    inputDir = project.file('.')
    images.add("${project.group}/${project.name}:${project.version}")
    dependsOn bootJar
}

task pushDockerImage(type: com.bmuschko.gradle.docker.tasks.image.DockerPushImage) {
    images.add("${project.group}/${project.name}:${project.version}")
    dependsOn buildDockerImage
}